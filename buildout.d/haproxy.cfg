[buildout]
parts += 
    haproxy-build
    haproxy-conf

[haproxy-build]
recipe = plone.recipe.haproxy
url = ${downloads:url}
target = custom
cpu = native
pcre = 1

[haproxy-conf]
recipe = collective.recipe.template
output = ${buildout:directory}/etc/haproxy.conf
maxconn = 24000
ulimit-n = 65536
user = ${users:os}
group = ${users:os}
bind = ${hosts:haproxy}:${ports:haproxy}
input = inline:

    global
      log 127.0.0.1 local6
      maxconn  ${haproxy-conf:maxconn}
      user     ${haproxy-conf:user}
      group    ${haproxy-conf:group}
      daemon
      nbproc 1
      spread-checks 5     # 5%

    defaults
      mode http
      option httpclose
      option abortonclose
      option dontlognull
      retries 3
      option redispatch
      monitor-uri /haproxy-ping

      timeout connect 7s
      timeout queue   300s
      timeout client  300s
      timeout server  300s

      # Enable status page at this URL, on the port HAProxy is bound to
      stats enable
      stats uri /haproxy-status
      stats refresh 5s
      stats realm Haproxy statistics

    frontend zopecluster
      bind ${haproxy-conf:bind}
      default_backend zope

    # Load balancing over the zope instances
    backend zope
        mode http
        option forwardfor
        option httpclose

        # Use Zope's __ac cookie as a basis for session stickiness if present.
        appsession __ac len 32 timeout 1d

        # Otherwise add a cookie called "serverid" for maintaining session stickiness.
        # This cookie lasts until the client's browser closes, and is invisible to Zope.
        cookie ${users:os} insert nocache indirect

        balance roundrobin
        option httpchk GET / HTTP/1.0\r\nUser-Agent:\ HAProxy

        server  plone0101 ${hosts:instance}:8080 check maxconn 3 rise 1
        server  plone0102 ${hosts:instance}:8081 check maxconn 3 rise 1
